"use strict"; // Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
}); // tslint:disable:no-any unified-signatures

const inversify_1 = require("inversify");

const vscode_1 = require("vscode");

let DocumentManager = class DocumentManager {
  get textDocuments() {
    return vscode_1.workspace.textDocuments;
  }

  get activeTextEditor() {
    return vscode_1.window.activeTextEditor;
  }

  get visibleTextEditors() {
    return vscode_1.window.visibleTextEditors;
  }

  get onDidChangeActiveTextEditor() {
    return vscode_1.window.onDidChangeActiveTextEditor;
  }

  get onDidChangeVisibleTextEditors() {
    return vscode_1.window.onDidChangeVisibleTextEditors;
  }

  get onDidChangeTextEditorSelection() {
    return vscode_1.window.onDidChangeTextEditorSelection;
  }

  get onDidChangeTextEditorOptions() {
    return vscode_1.window.onDidChangeTextEditorOptions;
  }

  get onDidChangeTextEditorViewColumn() {
    return vscode_1.window.onDidChangeTextEditorViewColumn;
  }

  get onDidOpenTextDocument() {
    return vscode_1.workspace.onDidOpenTextDocument;
  }

  get onDidCloseTextDocument() {
    return vscode_1.workspace.onDidCloseTextDocument;
  }

  get onDidSaveTextDocument() {
    return vscode_1.workspace.onDidSaveTextDocument;
  }

  showTextDocument(uri, options, preserveFocus) {
    return vscode_1.window.showTextDocument(uri, options, preserveFocus);
  }

  openTextDocument(arg) {
    return vscode_1.workspace.openTextDocument(arg);
  }

  applyEdit(edit) {
    return vscode_1.workspace.applyEdit(edit);
  }

};
DocumentManager = __decorate([inversify_1.injectable()], DocumentManager);
exports.DocumentManager = DocumentManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvY3VtZW50TWFuYWdlci5qcyJdLCJuYW1lcyI6WyJfX2RlY29yYXRlIiwiZGVjb3JhdG9ycyIsInRhcmdldCIsImtleSIsImRlc2MiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImQiLCJSZWZsZWN0IiwiZGVjb3JhdGUiLCJpIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpbnZlcnNpZnlfMSIsInJlcXVpcmUiLCJ2c2NvZGVfMSIsIkRvY3VtZW50TWFuYWdlciIsInRleHREb2N1bWVudHMiLCJ3b3Jrc3BhY2UiLCJhY3RpdmVUZXh0RWRpdG9yIiwid2luZG93IiwidmlzaWJsZVRleHRFZGl0b3JzIiwib25EaWRDaGFuZ2VBY3RpdmVUZXh0RWRpdG9yIiwib25EaWRDaGFuZ2VWaXNpYmxlVGV4dEVkaXRvcnMiLCJvbkRpZENoYW5nZVRleHRFZGl0b3JTZWxlY3Rpb24iLCJvbkRpZENoYW5nZVRleHRFZGl0b3JPcHRpb25zIiwib25EaWRDaGFuZ2VUZXh0RWRpdG9yVmlld0NvbHVtbiIsIm9uRGlkT3BlblRleHREb2N1bWVudCIsIm9uRGlkQ2xvc2VUZXh0RG9jdW1lbnQiLCJvbkRpZFNhdmVUZXh0RG9jdW1lbnQiLCJzaG93VGV4dERvY3VtZW50IiwidXJpIiwib3B0aW9ucyIsInByZXNlcnZlRm9jdXMiLCJvcGVuVGV4dERvY3VtZW50IiwiYXJnIiwiYXBwbHlFZGl0IiwiZWRpdCIsImluamVjdGFibGUiXSwibWFwcGluZ3MiOiJBQUFBLGEsQ0FDQTtBQUNBOztBQUNBLElBQUlBLFVBQVUsR0FBSSxVQUFRLFNBQUtBLFVBQWQsSUFBNkIsVUFBVUMsVUFBVixFQUFzQkMsTUFBdEIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUNuRixNQUFJQyxDQUFDLEdBQUdDLFNBQVMsQ0FBQ0MsTUFBbEI7QUFBQSxNQUEwQkMsQ0FBQyxHQUFHSCxDQUFD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QUFNQyxPQUFOLEVBQWVDLGFBQWYsRUFBOEI7QUFDMUMsV0FBT2xCLFFBQVEsQ0FBQ0ssTUFBVCxDQUFnQlUsZ0JBQWhCLENBQWlDQyxHQUFqQyxFQUFzQ0MsT0FBdEMsRUFBK0NDLGFBQS9DLENBQVA7QUFDSDs7QUFDREMsRUFBQUEsZ0JBQWdCLENBQUNDLEdBQUQsRUFBTTtBQUNsQixXQUFPcEIsUUFBUSxDQUFDRyxTQUFULENBQW1CZ0IsZ0JBQW5CLENBQW9DQyxHQUFwQyxDQUFQO0FBQ0g7O0FBQ0RDLEVBQUFBLFNBQVMsQ0FBQ0MsSUFBRCxFQUFPO0FBQ1osV0FBT3RCLFFBQVEsQ0FBQ0csU0FBVCxDQUFtQmtCLFNBQW5CLENBQTZCQyxJQUE3QixDQUFQO0FBQ0g7O0FBMUN1QyxDQUE1QztBQTRDQXJCLGVBQWUsR0FBR3JCLFVBQVUsQ0FBQyxDQUN6QmtCLFdBQVcsQ0FBQ3lCLFVBQVosRUFEeUIsQ0FBRCxFQUV6QnRCLGVBRnlCLENBQTVCO0FBR0FMLE9BQU8sQ0FBQ0ssZUFBUixHQUEwQkEsZUFBMUIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gdHNsaW50OmRpc2FibGU6bm8tYW55IHVuaWZpZWQtc2lnbmF0dXJlc1xuY29uc3QgaW52ZXJzaWZ5XzEgPSByZXF1aXJlKFwiaW52ZXJzaWZ5XCIpO1xuY29uc3QgdnNjb2RlXzEgPSByZXF1aXJlKFwidnNjb2RlXCIpO1xubGV0IERvY3VtZW50TWFuYWdlciA9IGNsYXNzIERvY3VtZW50TWFuYWdlciB7XG4gICAgZ2V0IHRleHREb2N1bWVudHMoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53b3Jrc3BhY2UudGV4dERvY3VtZW50cztcbiAgICB9XG4gICAgZ2V0IGFjdGl2ZVRleHRFZGl0b3IoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cuYWN0aXZlVGV4dEVkaXRvcjtcbiAgICB9XG4gICAgZ2V0IHZpc2libGVUZXh0RWRpdG9ycygpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndpbmRvdy52aXNpYmxlVGV4dEVkaXRvcnM7XG4gICAgfVxuICAgIGdldCBvbkRpZENoYW5nZUFjdGl2ZVRleHRFZGl0b3IoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cub25EaWRDaGFuZ2VBY3RpdmVUZXh0RWRpdG9yO1xuICAgIH1cbiAgICBnZXQgb25EaWRDaGFuZ2VWaXNpYmxlVGV4dEVkaXRvcnMoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cub25EaWRDaGFuZ2VWaXNpYmxlVGV4dEVkaXRvcnM7XG4gICAgfVxuICAgIGdldCBvbkRpZENoYW5nZVRleHRFZGl0b3JTZWxlY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cub25EaWRDaGFuZ2VUZXh0RWRpdG9yU2VsZWN0aW9uO1xuICAgIH1cbiAgICBnZXQgb25EaWRDaGFuZ2VUZXh0RWRpdG9yT3B0aW9ucygpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndpbmRvdy5vbkRpZENoYW5nZVRleHRFZGl0b3JPcHRpb25zO1xuICAgIH1cbiAgICBnZXQgb25EaWRDaGFuZ2VUZXh0RWRpdG9yVmlld0NvbHVtbigpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndpbmRvdy5vbkRpZENoYW5nZVRleHRFZGl0b3JWaWV3Q29sdW1uO1xuICAgIH1cbiAgICBnZXQgb25EaWRPcGVuVGV4dERvY3VtZW50KCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud29ya3NwYWNlLm9uRGlkT3BlblRleHREb2N1bWVudDtcbiAgICB9XG4gICAgZ2V0IG9uRGlkQ2xvc2VUZXh0RG9jdW1lbnQoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53b3Jrc3BhY2Uub25EaWRDbG9zZVRleHREb2N1bWVudDtcbiAgICB9XG4gICAgZ2V0IG9uRGlkU2F2ZVRleHREb2N1bWVudCgpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndvcmtzcGFjZS5vbkRpZFNhdmVUZXh0RG9jdW1lbnQ7XG4gICAgfVxuICAgIHNob3dUZXh0RG9jdW1lbnQodXJpLCBvcHRpb25zLCBwcmVzZXJ2ZUZvY3VzKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cuc2hvd1RleHREb2N1bWVudCh1cmksIG9wdGlvbnMsIHByZXNlcnZlRm9jdXMpO1xuICAgIH1cbiAgICBvcGVuVGV4dERvY3VtZW50KGFyZykge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud29ya3NwYWNlLm9wZW5UZXh0RG9jdW1lbnQoYXJnKTtcbiAgICB9XG4gICAgYXBwbHlFZGl0KGVkaXQpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndvcmtzcGFjZS5hcHBseUVkaXQoZWRpdCk7XG4gICAgfVxufTtcbkRvY3VtZW50TWFuYWdlciA9IF9fZGVjb3JhdGUoW1xuICAgIGludmVyc2lmeV8xLmluamVjdGFibGUoKVxuXSwgRG9jdW1lbnRNYW5hZ2VyKTtcbmV4cG9ydHMuRG9jdW1lbnRNYW5hZ2VyID0gRG9jdW1lbnRNYW5hZ2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZG9jdW1lbnRNYW5hZ2VyLmpzLm1hcCJdfQ==